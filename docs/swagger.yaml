basePath: /api/v1
definitions:
  models.Error:
    properties:
      code:
        type: integer
      error: {}
      message:
        type: string
    type: object
  models.NewAddressInWatch:
    properties:
      address:
        type: string
    type: object
  models.Transaction:
    properties:
      _id:
        type: string
      blockHash:
        type: string
      blockNumber:
        type: string
      contractAddress:
        type: string
      date:
        type: string
      from:
        type: string
      gas:
        type: number
      gasPrice:
        type: number
      hash:
        type: string
      receiverBalance:
        type: number
      senderBalance:
        type: number
      timestamp:
        type: integer
      to:
        type: string
      type:
        type: integer
      value:
        type: number
    required:
    - blockHash
    - hash
    type: object
  models.WatchList:
    properties:
      _id:
        type: string
      address:
        type: string
    required:
    - address
    type: object
info:
  contact:
    email: jonathanrwabahizi@gmail.com
    name: Jonathan Rwabahizi
    url: http://www.swagger.io/support
  description: ERC1155 events.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ERC1155-events
  version: "1.0"
paths:
  /transactions:
    get:
      consumes:
      - '*/*'
      description: get transactions list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "404":
          description: no transactions found
          schema:
            $ref: '#/definitions/models.Error'
      summary: get transactions
      tags:
      - transactions
  /transactions/{hash}:
    get:
      consumes:
      - '*/*'
      description: get single transaction
      parameters:
      - description: transaction hash
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "404":
          description: 'no transaction with hash: {hash} found'
          schema:
            $ref: '#/definitions/models.Error'
      summary: get single transaction
      tags:
      - transactions
  /watch-list:
    get:
      consumes:
      - '*/*'
      description: get watch list list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.WatchList'
            type: array
        "404":
          description: no address in watch list found
          schema:
            $ref: '#/definitions/models.Error'
      summary: get watch list
      tags:
      - watch-list
    post:
      consumes:
      - '*/*'
      description: add an address in watch list
      parameters:
      - description: new address to watch
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.NewAddressInWatch'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.WatchList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: add an address in watch list
      tags:
      - watch-list
  /watch-list/{address}:
    get:
      consumes:
      - '*/*'
      description: get single address in watch list
      parameters:
      - description: address in watch list
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WatchList'
        "404":
          description: address {address} not found in watch list
          schema:
            $ref: '#/definitions/models.Error'
      summary: get single address in watch list
      tags:
      - watch-list
  /watch-list/{addressId}:
    delete:
      consumes:
      - '*/*'
      description: delete an address in watch list
      parameters:
      - description: address ID to delete
        in: path
        name: addressId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: address {addressId} not found in watch list
          schema:
            $ref: '#/definitions/models.Error'
      summary: delete an address in watch list
      tags:
      - watch-list
    put:
      consumes:
      - '*/*'
      description: add an address in watch list
      parameters:
      - description: address ID to update
        in: path
        name: addressId
        required: true
        type: string
      - description: address to update in watch list
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.NewAddressInWatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WatchList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: address {addressId} not found in watch list
          schema:
            $ref: '#/definitions/models.Error'
      summary: add an address in watch list
      tags:
      - watch-list
schemes:
- https
swagger: "2.0"
